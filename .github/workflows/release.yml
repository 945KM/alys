name: Publish the built software

on:
  push:
    branches: [ master ]

jobs:
  linux_amd64:
    name: Package for linux_amd64 and upload

    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        pip install aligo flask apscheduler flask_sqlalchemy pyinstaller

    - name: Build the Flask Project
      run: |
        mkdir dist
        mkdir dist/linux_amd64
        pyinstaller -D alys.py --add-data "./static:./static" --add-data "./templates:./templates" --distpath dist/linux_amd64

    - name: Package the Flask Project
      run: |
        mkdir binary
        tar -czf binary/alys_v0.0.${{ github.run_number }}_linux_amd64.tar.gz dist/linux_amd64/*

    - name: Upload build result
      uses: actions/upload-artifact@v3
      with:
        name: build-result
        path: binary

  linux_arm64:
    name: Package for linux_amd64 and upload
    needs: linux_amd64

    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: build
      uses: pguyot/arm-runner-action@v2
      id: build_image
      with:
        base_image: raspios_lite_arm64:2022-04-04
        commands: |
          apt install python3 pip -y
          pip install aligo flask apscheduler flask_sqlalchemy pyinstaller
          mkdir dist
          mkdir dist/linux_arm64
          pyinstaller -D alys.py --add-data "./static:./static" --add-data "./templates:./templates" --distpath dist/linux_arm64
          mkdir binary
          tar -czf binary/alys_v0.0.${{ github.run_number }}_linux_arm64.tar.gz dist/linux_arm64/*

    - name: Upload build result
      uses: actions/upload-artifact@v3
      with:
        name: build-result
        path: binary

  windows_x64:
    name: Package software on windows_x64 and upload
    needs: linux_arm64

    strategy:
      matrix:
        os: [ windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        pip install aligo flask apscheduler flask_sqlalchemy pyinstaller

    - name: Build the Flask Project
      run: |
        mkdir dist
        mkdir dist/windows_x64
        pyinstaller -D alys.py --add-data "./static;./static" --add-data "./templates;./templates" --distpath dist/windows_x64

    - name: Package the Flask Project
      run: |
        Compress-Archive -Path dist/windows_x64/* -CompressionLevel Optimal -DestinationPath alys_v0.0.${{ github.run_number }}_windows_x64.zip
        mkdir binary
        mv alys_v0.0.${{ github.run_number }}_windows_x64.zip binary

    - name: Upload build result
      uses: actions/upload-artifact@v3
      with:
        name: build-result
        path: binary

  release:
    name: Download back the built software and release them

    needs: windows_x64
    runs-on: ubuntu-latest

    steps:
      - name: Download back the built software
        uses: actions/download-artifact@v3
        with:
          name: build-result

      - name: Release software
        uses: ncipollo/release-action@v1
        with:
          artifacts: "*"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v0.0.${{ github.run_number }}
